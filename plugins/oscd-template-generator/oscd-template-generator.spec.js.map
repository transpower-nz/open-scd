{"version":3,"file":"oscd-template-generator.spec.js","sourceRoot":"","sources":["../oscd-template-generator.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, expect, html } from '@open-wc/testing';\nimport { restore, SinonSpy, spy } from 'sinon';\n\nimport TemplateGenerator from './oscd-template-generator.js';\n\ncustomElements.define('template-generator', TemplateGenerator);\n\nexport const sclDocString = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SCL version=\"2007\" revision=\"B\" xmlns=\"http://www.iec.ch/61850/2003/SCL\">\n  <DataTypeTemplates></DataTypeTemplates>\n</SCL>`;\n\ndescribe('TemplateGenerator', () => {\n  let element: TemplateGenerator;\n  beforeEach(async () => {\n    element = await fixture(html`<template-generator></template-generator>`);\n  });\n\n  it('displays no action button', () =>\n    expect(element.shadowRoot?.querySelector('md-fab')).to.not.exist);\n\n  it('starts with LPHD selected', () => {\n    expect(element).to.have.property('lNodeType', 'LPHD');\n    expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  describe('given a loaded document', () => {\n    let listener: SinonSpy;\n    afterEach(restore);\n    beforeEach(async () => {\n      listener = spy();\n      element.addEventListener('oscd-edit-v2', listener);\n      element.doc = new DOMParser().parseFromString(\n        sclDocString,\n        'application/xml'\n      );\n      await element.updateComplete;\n    });\n\n    it('displays an action button', () =>\n      expect(element.shadowRoot?.querySelector('md-fab')).to.exist);\n\n    it('adds Templates on action button click', () => {\n      (element.shadowRoot?.querySelector('md-fab') as HTMLElement).click();\n\n      /* expect five calls for\n         - LPHD and its mandatory DOTypes\n           - PhyHealth and its mandatory EnumType\n             - stVal\n           - PhyNam\n           - Proxy\n       */\n      expect(listener).property('args').to.have.lengthOf(5);\n      listener.args.forEach(args => {\n        const { edit } = args[0].detail;\n        expect(edit).to.have.property(\n          'parent',\n          element.doc?.querySelector('DataTypeTemplates')\n        );\n        expect(edit).to.have.property('node');\n      });\n    });\n\n    it('adds missing DataTypeTemplates section on action button click', () => {\n      element.doc?.querySelector('DataTypeTemplates')?.remove();\n      (element.shadowRoot?.querySelector('md-fab') as HTMLElement).click();\n\n      // expect one more call for the DTT section\n      expect(listener).property('args').to.have.lengthOf(6);\n      expect(listener.args[0][0])\n        .property('detail')\n        .property('edit')\n        .to.have.property('parent', element.doc?.documentElement);\n      expect(listener.args[0][0])\n        .property('detail')\n        .property('edit')\n        .property('node')\n        .to.have.property('tagName', 'DataTypeTemplates');\n    });\n\n    it('adds LNodeTypes, DOTypes, DATypes, and EnumTypes as requested', async () => {\n      element.lNodeType = 'LLN0';\n      element.reset();\n      await element.lNodeTypeUI?.updateComplete;\n      await element.updateComplete;\n\n      async function selectAll(column: number) {\n        const item = element.treeUI.shadowRoot?.querySelector(\n          `md-list:nth-of-type(${column + 1}) > md-list-item:first-of-type`\n        ) as HTMLElement;\n        item?.click();\n        await element.treeUI.updateComplete;\n        await element.updateComplete;\n      }\n\n      await selectAll(1);\n      await selectAll(2);\n      await selectAll(3);\n      await selectAll(4);\n      await selectAll(5);\n\n      (element.shadowRoot?.querySelector('md-fab') as HTMLElement).click();\n\n      /* expect 30 calls for\n        LNodeType LLN0\n        DOType    Beh\n                  Diag\n                  GrRef\n                  Health\n                  InRef\n                  LEDRs\n                  Loc\n                  LocKey\n                  LocSta\n                  MltLev\n                  Mod\n                  NamPlt\n                  SwModKey\n        DAType    origin\n                  pulseConfig\n                  SBOw\n                  Oper\n                  Cancel\n                  SBOw\n                  Oper\n                  Cancel\n        EnumType  stVal\n                  subVal\n                  orCat\n                  cmdQual\n                  ctlModel\n                  sboClass\n                  stVal\n                  subVal\n       */\n      expect(listener).property('args').to.have.lengthOf(30);\n      const elms = listener.args.map(args => args[0].detail.edit.node);\n      expect(elms.filter(e => e.tagName === 'LNodeType')).to.have.lengthOf(1);\n      expect(elms.filter(e => e.tagName === 'DOType')).to.have.lengthOf(13);\n      expect(elms.filter(e => e.tagName === 'DAType')).to.have.lengthOf(8);\n      expect(elms.filter(e => e.tagName === 'EnumType')).to.have.lengthOf(8);\n    }).timeout(10000); // selecting 550 paths for a full LLN0 is rather slow.\n  });\n});\n"]}