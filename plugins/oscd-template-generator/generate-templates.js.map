{"version":3,"file":"generate-templates.js","sourceRoot":"","sources":["../generate-templates.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { cyrb64 } from '@openenergytools/open-scd-core';\nimport type { TreeSelection } from '@openenergytools/tree-grid';\n\nfunction describeEnumType(element: Element): { vals: Record<string, string> } {\n  const vals: Record<string, string> = {};\n  for (const val of Array.from(element.children)\n    .filter(child => child.tagName === 'EnumVal')\n    .sort(\n      (v1, v2) =>\n        parseInt(v1.getAttribute('ord') ?? '', 10) -\n        parseInt(v2.getAttribute('ord') ?? '', 10)\n    ))\n    vals[val.getAttribute('ord') ?? ''] = val.textContent ?? '';\n  return { vals };\n}\n\nfunction describeDAType(element: Element): {\n  bdas: Record<string, Record<string, string | null>>;\n} {\n  const bdas: Record<string, Record<string, string | null>> = {};\n  for (const bda of Array.from(element.children)\n    .filter(child => child.tagName === 'BDA')\n    .sort((c1, c2) => c1.outerHTML.localeCompare(c2.outerHTML))) {\n    const [bType, type, dchg, dupd, qchg] = [\n      'bType',\n      'type',\n      'dchg',\n      'dupd',\n      'qchg',\n    ].map(attr => bda.getAttribute(attr));\n    bdas[bda.getAttribute('name') ?? ''] = { bType, type, dchg, dupd, qchg };\n  }\n  return { bdas };\n}\n\nfunction describeDOType(element: Element) {\n  const sdos: Record<string, Record<string, string | null>> = {};\n  for (const sdo of Array.from(element.children)\n    .filter(child => child.tagName === 'SDO')\n    .sort((c1, c2) => c1.outerHTML.localeCompare(c2.outerHTML))) {\n    const [name, type, transient] = ['name', 'type', 'transient'].map(attr =>\n      sdo.getAttribute(attr)\n    );\n    sdos[name ?? ''] = { type, transient };\n  }\n  const das: Record<string, Record<string, string | null>> = {};\n  for (const da of Array.from(element.children)\n    .filter(child => child.tagName === 'DA')\n    .sort((c1, c2) => c1.outerHTML.localeCompare(c2.outerHTML))) {\n    const [name, fc, bType, type, dchg, dupd, qchg] = [\n      'name',\n      'fc',\n      'bType',\n      'type',\n      'dchg',\n      'dupd',\n      'qchg',\n    ].map(attr => da.getAttribute(attr));\n    das[name ?? ''] = {\n      fc,\n      bType,\n      type,\n      dchg,\n      dupd,\n      qchg,\n    };\n  }\n  return {\n    sdos,\n    das,\n    cdc: element.getAttribute('cdc'),\n  };\n}\n\nfunction describeLNodeType(element: Element) {\n  const dos: Record<string, Record<string, string | null>> = {};\n  for (const doElement of Array.from(element.children)\n    .filter(child => child.tagName === 'DO')\n    .sort((c1, c2) => c1.outerHTML.localeCompare(c2.outerHTML))) {\n    const [name, type, transient] = ['name', 'type', 'transient'].map(attr =>\n      doElement.getAttribute(attr)\n    );\n    dos[name ?? ''] = { type, transient };\n  }\n  return {\n    dos,\n    lnClass: element.getAttribute('lnClass'),\n  };\n}\n\nconst typeDescriptions = {\n  EnumType: describeEnumType,\n  DAType: describeDAType,\n  DOType: describeDOType,\n  LNodeType: describeLNodeType,\n} as Partial<Record<string, (e: Element) => object>>;\n\nfunction describeElement(element: Element): object {\n  return (\n    typeDescriptions[element.tagName]?.(element) ?? { xml: element.outerHTML }\n  );\n}\n\nfunction hashElement(element: Element): string {\n  return cyrb64(JSON.stringify(describeElement(element)));\n}\n\nexport type Templates = {\n  EnumType: Element[];\n  DAType: Element[];\n  DOType: Element[];\n  LNodeType: Element[];\n};\n\nexport function generateTemplates(\n  selection: TreeSelection,\n  doc: XMLDocument,\n  data: Record<string, any>,\n  lnClass: string\n): Templates {\n  const types = new Set<string>();\n  const elements: Templates = {\n    LNodeType: [],\n    DOType: [],\n    DAType: [],\n    EnumType: [],\n  };\n\n  function identify(element: Element, name: string): string {\n    const hash = hashElement(element);\n    const id = `${name}$oscd$_${hash}`;\n    element.setAttribute('id', id);\n    if (!types.has(id)) {\n      types.add(id);\n      elements[\n        element.tagName as 'LNodeType' | 'DOType' | 'DAType' | 'EnumType'\n      ]?.push(element);\n    }\n    return id;\n  }\n\n  function createElement(\n    tag: string,\n    attrs: Record<string, string | null | undefined> = {}\n  ): Element {\n    const element = doc.createElementNS(doc.documentElement.namespaceURI, tag);\n    Object.entries(attrs)\n      .filter(([_name, value]) => value !== null && value !== undefined)\n      .forEach(([name, value]) => element.setAttribute(name, value!));\n    return element;\n  }\n\n  function addEnumType(path: string[], sel: TreeSelection): string {\n    let d = data;\n    for (const slug of path) d = d[slug].children;\n\n    const vals = [];\n\n    for (const content of Object.keys(sel)) {\n      const ord = d[content].literalVal;\n      const val = createElement('EnumVal', { ord });\n      val.textContent = content;\n      vals.push(val);\n    }\n\n    vals.sort(\n      (v1, v2) =>\n        parseInt(v1.getAttribute('ord') ?? '', 10) -\n        parseInt(v2.getAttribute('ord') ?? '', 10)\n    );\n\n    const enumType = createElement('EnumType');\n    vals.forEach(val => enumType.append(val));\n\n    return identify(enumType, path[path.length - 1]);\n  }\n\n  function addDAType(\n    path: string[],\n    sel: TreeSelection,\n    underlyingValSel: TreeSelection = {}\n  ): string {\n    let d = data;\n    for (const slug of path.slice(0, -1)) d = d[slug].children;\n    const { children, underlyingTypeKind, underlyingType, typeKind } =\n      d[path[path.length - 1]];\n\n    if (typeKind !== 'CONSTRUCTED')\n      throw new Error(`DAType typeKind is not CONSTRUCTED, but ${typeKind}`);\n\n    const daType = createElement('DAType');\n\n    for (const [name, dep] of Object.entries(children) as [\n      string,\n      {\n        tagName: string;\n        transient?: string;\n        fc: string;\n        dchg?: string;\n        dupd?: string;\n        qchg?: string;\n        typeKind?: 'BASIC' | 'ENUMERATED' | 'CONSTRUCTED' | 'undefined';\n        type?: string;\n      }\n    ][]) {\n      // eslint-disable-next-line no-continue\n      if (!sel[name]) continue;\n      const bda = createElement('BDA', { name });\n      if (dep.typeKind === 'BASIC' || !dep.typeKind) {\n        bda.setAttribute('bType', dep.type ?? '');\n      }\n      if (dep.typeKind === 'ENUMERATED') {\n        const enumId = addEnumType(path.concat([name]), sel[name]);\n        bda.setAttribute('bType', 'Enum');\n        bda.setAttribute('type', enumId);\n      }\n      if (dep.typeKind === 'undefined') {\n        if (underlyingTypeKind === 'BASIC')\n          bda.setAttribute('bType', underlyingType);\n        else if (underlyingTypeKind === 'ENUMERATED') {\n          const enumId = addEnumType(\n            path.slice(0, -1).concat(['stVal']),\n            underlyingValSel\n          );\n          bda.setAttribute('bType', 'Enum');\n          bda.setAttribute('type', enumId);\n        } else if (underlyingTypeKind === 'CONSTRUCTED') {\n          let daId = '';\n          try {\n            daId = addDAType(\n              path.slice(0, -1).concat(['mxVal']),\n              underlyingValSel\n            );\n          } catch {\n            throw new Error(\n              `Unexpected selection ${JSON.stringify(\n                path\n              )} without mxVal sibling`\n            );\n          }\n          bda.setAttribute('bType', 'Struct');\n          bda.setAttribute('type', daId);\n        } else\n          throw new Error(\n            `Unexpected underlyingTypeKind ${underlyingTypeKind}`\n          );\n      }\n      if (dep.typeKind === 'CONSTRUCTED') {\n        const daId = addDAType(\n          path.concat([name]),\n          sel[name],\n          underlyingValSel\n        );\n        bda.setAttribute('bType', 'Struct');\n        bda.setAttribute('type', daId);\n      }\n      daType.append(bda);\n    }\n\n    return identify(daType, path[path.length - 1]);\n  }\n\n  function addDOType(path: string[], sel: TreeSelection): string {\n    if (!sel)\n      throw new Error(\n        `adding DO type for empty selection at ${JSON.stringify(path, null, 2)}`\n      );\n    let d = data;\n    for (const slug of path.slice(0, -1)) d = d[slug].children;\n\n    const dO = d[path[path.length - 1]];\n    const doType = createElement('DOType', { cdc: dO.type });\n\n    const deps: [\n      string,\n      {\n        tagName: string;\n        transient?: string;\n        fc: string;\n        dchg?: string;\n        dupd?: string;\n        qchg?: string;\n        typeKind?: 'BASIC' | 'ENUMERATED' | 'CONSTRUCTED' | 'undefined';\n        type?: string;\n      }\n    ][] = Object.entries(dO.children);\n\n    for (const [name, dep] of deps) {\n      // eslint-disable-next-line no-continue\n      if (!sel[name]) continue;\n      if (dep.tagName === 'SubDataObject') {\n        const { transient } = dep;\n        const type = addDOType(path.concat([name]), sel[name]);\n        const sdo = createElement('SDO', { name, transient, type });\n        doType.prepend(sdo);\n      } else {\n        const { fc, dchg, dupd, qchg } = dep;\n        const da = createElement('DA', { name, fc, dchg, dupd, qchg });\n        if (dep.typeKind === 'BASIC' || !dep.typeKind) {\n          da.setAttribute('bType', dep.type ?? '');\n        }\n        if (dep.typeKind === 'ENUMERATED') {\n          const enumId = addEnumType(path.concat([name]), sel[name]);\n          da.setAttribute('bType', 'Enum');\n          da.setAttribute('type', enumId);\n        }\n        if (dep.typeKind === 'CONSTRUCTED') {\n          const underlyingVal = sel.stVal || sel.mxVal;\n          const daId = addDAType(path.concat([name]), sel[name], underlyingVal);\n          da.setAttribute('bType', 'Struct');\n          da.setAttribute('type', daId);\n        }\n        doType.append(da);\n      }\n    }\n\n    return identify(doType, path[path.length - 1]);\n  }\n\n  const lnType = createElement('LNodeType', { lnClass });\n\n  Object.keys(selection).forEach(name => {\n    const type = addDOType([name], selection[name]);\n    const { transient } = data[name];\n    const doElement = createElement('DO', { name, type, transient });\n    lnType.append(doElement);\n  });\n\n  identify(lnType, lnClass);\n\n  return elements;\n}\n"]}