import { isRemove, isInsert, isUpdate, isComplex, isNamespaced } from './editv1.js';

function convertUpdate(edit) {
    const attributes = {};
    const attributesNS = {};
    Object.entries(edit.attributes).forEach(([key, value]) => {
        if (isNamespaced(value)) {
            const ns = value.namespaceURI;
            if (!ns)
                return;
            if (!attributesNS[ns]) {
                attributesNS[ns] = {};
            }
            attributesNS[ns][key] = value.value;
        }
        else
            attributes[key] = value;
    });
    return { element: edit.element, attributes, attributesNS };
}
function convertEdit(edit) {
    if (isRemove(edit))
        return edit;
    if (isInsert(edit))
        return edit;
    if (isUpdate(edit))
        return convertUpdate(edit);
    if (isComplex(edit))
        return edit.map(convertEdit);
    return [];
}

export { convertEdit };
//# sourceMappingURL=convertEdit.js.map
