{"version":3,"file":"globals.js","sources":["../../../../../../node_modules/fast-check/lib/esm/utils/globals.js"],"sourcesContent":["import { safeApply } from './apply.js';\nconst SArray = typeof Array !== 'undefined' ? Array : undefined;\nexport { SArray as Array };\nconst SBigInt = typeof BigInt !== 'undefined' ? BigInt : undefined;\nexport { SBigInt as BigInt };\nconst SBigInt64Array = typeof BigInt64Array !== 'undefined' ? BigInt64Array : undefined;\nexport { SBigInt64Array as BigInt64Array };\nconst SBigUint64Array = typeof BigUint64Array !== 'undefined' ? BigUint64Array : undefined;\nexport { SBigUint64Array as BigUint64Array };\nconst SBoolean = typeof Boolean !== 'undefined' ? Boolean : undefined;\nexport { SBoolean as Boolean };\nconst SDate = typeof Date !== 'undefined' ? Date : undefined;\nexport { SDate as Date };\nconst SError = typeof Error !== 'undefined' ? Error : undefined;\nexport { SError as Error };\nconst SFloat32Array = typeof Float32Array !== 'undefined' ? Float32Array : undefined;\nexport { SFloat32Array as Float32Array };\nconst SFloat64Array = typeof Float64Array !== 'undefined' ? Float64Array : undefined;\nexport { SFloat64Array as Float64Array };\nconst SInt8Array = typeof Int8Array !== 'undefined' ? Int8Array : undefined;\nexport { SInt8Array as Int8Array };\nconst SInt16Array = typeof Int16Array !== 'undefined' ? Int16Array : undefined;\nexport { SInt16Array as Int16Array };\nconst SInt32Array = typeof Int32Array !== 'undefined' ? Int32Array : undefined;\nexport { SInt32Array as Int32Array };\nconst SNumber = typeof Number !== 'undefined' ? Number : undefined;\nexport { SNumber as Number };\nconst SString = typeof String !== 'undefined' ? String : undefined;\nexport { SString as String };\nconst SSet = typeof Set !== 'undefined' ? Set : undefined;\nexport { SSet as Set };\nconst SUint8Array = typeof Uint8Array !== 'undefined' ? Uint8Array : undefined;\nexport { SUint8Array as Uint8Array };\nconst SUint8ClampedArray = typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : undefined;\nexport { SUint8ClampedArray as Uint8ClampedArray };\nconst SUint16Array = typeof Uint16Array !== 'undefined' ? Uint16Array : undefined;\nexport { SUint16Array as Uint16Array };\nconst SUint32Array = typeof Uint32Array !== 'undefined' ? Uint32Array : undefined;\nexport { SUint32Array as Uint32Array };\nconst SencodeURIComponent = typeof encodeURIComponent !== 'undefined' ? encodeURIComponent : undefined;\nexport { SencodeURIComponent as encodeURIComponent };\nconst untouchedForEach = Array.prototype.forEach;\nconst untouchedIndexOf = Array.prototype.indexOf;\nconst untouchedJoin = Array.prototype.join;\nconst untouchedMap = Array.prototype.map;\nconst untouchedFilter = Array.prototype.filter;\nconst untouchedPush = Array.prototype.push;\nconst untouchedPop = Array.prototype.pop;\nconst untouchedSplice = Array.prototype.splice;\nconst untouchedSlice = Array.prototype.slice;\nconst untouchedSort = Array.prototype.sort;\nconst untouchedEvery = Array.prototype.every;\nfunction extractForEach(instance) {\n    try {\n        return instance.forEach;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractIndexOf(instance) {\n    try {\n        return instance.indexOf;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractJoin(instance) {\n    try {\n        return instance.join;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractMap(instance) {\n    try {\n        return instance.map;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractFilter(instance) {\n    try {\n        return instance.filter;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractPush(instance) {\n    try {\n        return instance.push;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractPop(instance) {\n    try {\n        return instance.pop;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSplice(instance) {\n    try {\n        return instance.splice;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSlice(instance) {\n    try {\n        return instance.slice;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSort(instance) {\n    try {\n        return instance.sort;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractEvery(instance) {\n    try {\n        return instance.every;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeForEach(instance, fn) {\n    if (extractForEach(instance) === untouchedForEach) {\n        return instance.forEach(fn);\n    }\n    return safeApply(untouchedForEach, instance, [fn]);\n}\nexport function safeIndexOf(instance, ...args) {\n    if (extractIndexOf(instance) === untouchedIndexOf) {\n        return instance.indexOf(...args);\n    }\n    return safeApply(untouchedIndexOf, instance, args);\n}\nexport function safeJoin(instance, ...args) {\n    if (extractJoin(instance) === untouchedJoin) {\n        return instance.join(...args);\n    }\n    return safeApply(untouchedJoin, instance, args);\n}\nexport function safeMap(instance, fn) {\n    if (extractMap(instance) === untouchedMap) {\n        return instance.map(fn);\n    }\n    return safeApply(untouchedMap, instance, [fn]);\n}\nexport function safeFilter(instance, predicate) {\n    if (extractFilter(instance) === untouchedFilter) {\n        return instance.filter(predicate);\n    }\n    return safeApply(untouchedFilter, instance, [predicate]);\n}\nexport function safePush(instance, ...args) {\n    if (extractPush(instance) === untouchedPush) {\n        return instance.push(...args);\n    }\n    return safeApply(untouchedPush, instance, args);\n}\nexport function safePop(instance) {\n    if (extractPop(instance) === untouchedPop) {\n        return instance.pop();\n    }\n    return safeApply(untouchedPop, instance, []);\n}\nexport function safeSplice(instance, ...args) {\n    if (extractSplice(instance) === untouchedSplice) {\n        return instance.splice(...args);\n    }\n    return safeApply(untouchedSplice, instance, args);\n}\nexport function safeSlice(instance, ...args) {\n    if (extractSlice(instance) === untouchedSlice) {\n        return instance.slice(...args);\n    }\n    return safeApply(untouchedSlice, instance, args);\n}\nexport function safeSort(instance, ...args) {\n    if (extractSort(instance) === untouchedSort) {\n        return instance.sort(...args);\n    }\n    return safeApply(untouchedSort, instance, args);\n}\nexport function safeEvery(instance, ...args) {\n    if (extractEvery(instance) === untouchedEvery) {\n        return instance.every(...args);\n    }\n    return safeApply(untouchedEvery, instance, args);\n}\nconst untouchedGetTime = Date.prototype.getTime;\nconst untouchedToISOString = Date.prototype.toISOString;\nfunction extractGetTime(instance) {\n    try {\n        return instance.getTime;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractToISOString(instance) {\n    try {\n        return instance.toISOString;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeGetTime(instance) {\n    if (extractGetTime(instance) === untouchedGetTime) {\n        return instance.getTime();\n    }\n    return safeApply(untouchedGetTime, instance, []);\n}\nexport function safeToISOString(instance) {\n    if (extractToISOString(instance) === untouchedToISOString) {\n        return instance.toISOString();\n    }\n    return safeApply(untouchedToISOString, instance, []);\n}\nconst untouchedAdd = Set.prototype.add;\nconst untouchedHas = Set.prototype.has;\nfunction extractAdd(instance) {\n    try {\n        return instance.add;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractHas(instance) {\n    try {\n        return instance.has;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeAdd(instance, value) {\n    if (extractAdd(instance) === untouchedAdd) {\n        return instance.add(value);\n    }\n    return safeApply(untouchedAdd, instance, [value]);\n}\nexport function safeHas(instance, value) {\n    if (extractHas(instance) === untouchedHas) {\n        return instance.has(value);\n    }\n    return safeApply(untouchedHas, instance, [value]);\n}\nconst untouchedSet = WeakMap.prototype.set;\nconst untouchedGet = WeakMap.prototype.get;\nfunction extractSet(instance) {\n    try {\n        return instance.set;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractGet(instance) {\n    try {\n        return instance.get;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeSet(instance, key, value) {\n    if (extractSet(instance) === untouchedSet) {\n        return instance.set(key, value);\n    }\n    return safeApply(untouchedSet, instance, [key, value]);\n}\nexport function safeGet(instance, key) {\n    if (extractGet(instance) === untouchedGet) {\n        return instance.get(key);\n    }\n    return safeApply(untouchedGet, instance, [key]);\n}\nconst untouchedMapSet = Map.prototype.set;\nconst untouchedMapGet = Map.prototype.get;\nfunction extractMapSet(instance) {\n    try {\n        return instance.set;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractMapGet(instance) {\n    try {\n        return instance.get;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeMapSet(instance, key, value) {\n    if (extractMapSet(instance) === untouchedMapSet) {\n        return instance.set(key, value);\n    }\n    return safeApply(untouchedMapSet, instance, [key, value]);\n}\nexport function safeMapGet(instance, key) {\n    if (extractMapGet(instance) === untouchedMapGet) {\n        return instance.get(key);\n    }\n    return safeApply(untouchedMapGet, instance, [key]);\n}\nconst untouchedSplit = String.prototype.split;\nconst untouchedStartsWith = String.prototype.startsWith;\nconst untouchedEndsWith = String.prototype.endsWith;\nconst untouchedSubstring = String.prototype.substring;\nconst untouchedToLowerCase = String.prototype.toLowerCase;\nconst untouchedToUpperCase = String.prototype.toUpperCase;\nconst untouchedPadStart = String.prototype.padStart;\nconst untouchedCharCodeAt = String.prototype.charCodeAt;\nconst untouchedNormalize = String.prototype.normalize;\nconst untouchedReplace = String.prototype.replace;\nfunction extractSplit(instance) {\n    try {\n        return instance.split;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractStartsWith(instance) {\n    try {\n        return instance.startsWith;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractEndsWith(instance) {\n    try {\n        return instance.endsWith;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSubstring(instance) {\n    try {\n        return instance.substring;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractToLowerCase(instance) {\n    try {\n        return instance.toLowerCase;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractToUpperCase(instance) {\n    try {\n        return instance.toUpperCase;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractPadStart(instance) {\n    try {\n        return instance.padStart;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractCharCodeAt(instance) {\n    try {\n        return instance.charCodeAt;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractNormalize(instance) {\n    try {\n        return instance.normalize;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractReplace(instance) {\n    try {\n        return instance.replace;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeSplit(instance, ...args) {\n    if (extractSplit(instance) === untouchedSplit) {\n        return instance.split(...args);\n    }\n    return safeApply(untouchedSplit, instance, args);\n}\nexport function safeStartsWith(instance, ...args) {\n    if (extractStartsWith(instance) === untouchedStartsWith) {\n        return instance.startsWith(...args);\n    }\n    return safeApply(untouchedStartsWith, instance, args);\n}\nexport function safeEndsWith(instance, ...args) {\n    if (extractEndsWith(instance) === untouchedEndsWith) {\n        return instance.endsWith(...args);\n    }\n    return safeApply(untouchedEndsWith, instance, args);\n}\nexport function safeSubstring(instance, ...args) {\n    if (extractSubstring(instance) === untouchedSubstring) {\n        return instance.substring(...args);\n    }\n    return safeApply(untouchedSubstring, instance, args);\n}\nexport function safeToLowerCase(instance) {\n    if (extractToLowerCase(instance) === untouchedToLowerCase) {\n        return instance.toLowerCase();\n    }\n    return safeApply(untouchedToLowerCase, instance, []);\n}\nexport function safeToUpperCase(instance) {\n    if (extractToUpperCase(instance) === untouchedToUpperCase) {\n        return instance.toUpperCase();\n    }\n    return safeApply(untouchedToUpperCase, instance, []);\n}\nexport function safePadStart(instance, ...args) {\n    if (extractPadStart(instance) === untouchedPadStart) {\n        return instance.padStart(...args);\n    }\n    return safeApply(untouchedPadStart, instance, args);\n}\nexport function safeCharCodeAt(instance, index) {\n    if (extractCharCodeAt(instance) === untouchedCharCodeAt) {\n        return instance.charCodeAt(index);\n    }\n    return safeApply(untouchedCharCodeAt, instance, [index]);\n}\nexport function safeNormalize(instance, form) {\n    if (extractNormalize(instance) === untouchedNormalize) {\n        return instance.normalize(form);\n    }\n    return safeApply(untouchedNormalize, instance, [form]);\n}\nexport function safeReplace(instance, pattern, replacement) {\n    if (extractReplace(instance) === untouchedReplace) {\n        return instance.replace(pattern, replacement);\n    }\n    return safeApply(untouchedReplace, instance, [pattern, replacement]);\n}\nconst untouchedNumberToString = Number.prototype.toString;\nfunction extractNumberToString(instance) {\n    try {\n        return instance.toString;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeNumberToString(instance, ...args) {\n    if (extractNumberToString(instance) === untouchedNumberToString) {\n        return instance.toString(...args);\n    }\n    return safeApply(untouchedNumberToString, instance, args);\n}\nconst untouchedHasOwnProperty = Object.prototype.hasOwnProperty;\nconst untouchedToString = Object.prototype.toString;\nexport function safeHasOwnProperty(instance, v) {\n    return safeApply(untouchedHasOwnProperty, instance, [v]);\n}\nexport function safeToString(instance) {\n    return safeApply(untouchedToString, instance, []);\n}\n"],"names":[],"mappings":"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"}